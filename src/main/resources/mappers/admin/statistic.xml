<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="LacunaMatata.Lacuna.repository.admin.StatisticsMapper">
    <resultMap id="userCountResultMap" type="LacunaMatata.Lacuna.entity.user.UserCount">
        <id property="userCountId" column="user_count_id" />
        <result property="serviceName" column="service_name" />
        <result property="serviceCount" column="service_count" />
        <result property="userDate" column="user_date" />
        <result property="userHour" column="user_hour" />
        <result property="sumServiceCount" column="sumServiceCount" />
    </resultMap>

    <select id="problemInitStatistic"
            resultType="LacunaMatata.Lacuna.dto.response.admin.statistic.RespMbtiStatisticRankDto">
        select
            row_number() over(partition by skinProblemType order by skinProblemCount desc, mbtiSkinConcernId) as rankNumber,
            skinProblemType,
            mbtiSkinConcernId,
            mbtiSkinConcernName,
            skinProblemCount
        from
            (
            select
                1 as skinProblemType,
                mr.skin_problem_one as mbtiSkinConcernId,
                msc.mbti_skin_concern_name as mbtiSkinConcernName,
                count(mr.skin_problem_one) as skinProblemCount
            from
                tb_mbti_response mr
                left outer join tb_mbti_skin_concern msc
                on msc.mbti_skin_concern_id = mr.skin_problem_one
            group by mr.skin_problem_one, msc.mbti_skin_concern_name

            union all

            select
                2 as skinProblemType,
                mr.skin_problem_two as mbtiSkinConcernId,
                msc.mbti_skin_concern_name as mbtiSkinConcernName,
                count(mr.skin_problem_two) as skinProblemCount
           from
                tb_mbti_response mr
                left outer join tb_mbti_skin_concern msc
                on msc.mbti_skin_concern_id = mr.skin_problem_two
            group by mr.skin_problem_two, msc.mbti_skin_concern_name
                ) as skinProblemRanks
    </select>

    <select id="getUseCountByDate" resultMap="userCountResultMap">
        select
            sum(service_count) as sumServiceCount,
            service_name,
            user_date
        from
            tb_user_count
        where
            user_date between #{startDate} and #{endDate}
        group by
            service_name;
    </select>

    <select id="getStatisticCountByStartDateAndEndDate" resultType="LacunaMatata.Lacuna.dto.response.admin.statistic.RespMbtiStatisticCountDto">
        with mbti_response_group as (
            select
                *
            from
                tb_mbti_response
            where
                date(create_date) between #{startDate} and #{endDate}
            group by
                mbti_response_user_id,
                session_id,
                create_date
        )

        select
            'totalCount' as count_type,
            'TOTAL' as count_code,
            count(*) as count
        from
            mbti_response_group

        union all

        select
            'genderCount' as count_type,
            gender_codes.gender_code,
            count(mresp.gender) as count
        from
            (select '1' as gender_code union select '2') as gender_codes
            left outer join mbti_response_group mresp on(mresp.gender = gender_codes.gender_code)
        group by
            gender_codes.gender_code

        union all

        select
            'ageCount' as count_type,
            age_codes.age_code,
            ifnull(age_counts.count, 0)
        from
            (select '10' as age_code union select '20' union select '30' union select '40' union select '50' union select 'etc') as age_codes
            left outer join (
                select
                    case
                        when year(birth) between year(date_add(now(), interval -18 year)) and year(date_add(now(), interval -9 year)) then '10'
                        when year(birth) between year(date_add(now(), interval -28 year)) and year(date_add(now(), interval -19 year)) then '20'
                        when year(birth) between year(date_add(now(), interval -38 year)) and year(date_add(now(), interval -29 year)) then '30'
                        when year(birth) between year(date_add(now(), interval -48 year)) and year(date_add(now(), interval -39 year)) then '40'
                        when year(birth) between year(date_add(now(), interval -58 year)) and year(date_add(now(), interval -49 year)) then '50'
                        else 'etc'
                    end as age_code,
                    count(gender) as count
                from
                    mbti_response_group
                group by
                    case
                        when year(birth) between year(date_add(now(), interval -18 year)) and year(date_add(now(), interval -9 year)) then '10'
                        when year(birth) between year(date_add(now(), interval -28 year)) and year(date_add(now(), interval -19 year)) then '20'
                        when year(birth) between year(date_add(now(), interval -38 year)) and year(date_add(now(), interval -29 year)) then '30'
                        when year(birth) between year(date_add(now(), interval -48 year)) and year(date_add(now(), interval -39 year)) then '40'
                        when year(birth) between year(date_add(now(), interval -58 year)) and year(date_add(now(), interval -49 year)) then '50'
                        else '기타'
                    end
            ) as age_counts on(age_counts.age_code = age_codes.age_code)

        union all

        select
            'mbtiCount' as count_type,
            mrst.mbti_result_category_name,
            count(mresp.mbti_result_id) as mbti_result_count
        from
            tb_mbti_result mrst
            left outer join mbti_response_group mresp on(mresp.mbti_result_id = mrst.mbti_result_id)
        group by
            mrst.mbti_result_category_name
        order by
            count_type,
            count_code
    </select>
    <select id="problemStatistic"
            resultType="LacunaMatata.Lacuna.dto.response.admin.statistic.RespMbtiStatisticRankDto">
        with mbti_response_group as (
            select
                skin_problem_one,
                skin_problem_two
            from
                tb_mbti_response
            where
                date(create_date) between #{startDate} and #{endDate}
            group by
                mbti_response_user_id,
                session_id,
                create_date
        )

        select
            *
        from
            (
            select
                row_number() over(order by count(skin_problem_one) desc) as id,
                rank() over(order by count(skin_problem_one) desc),
                skin_problem_one,
                count(skin_problem_one)
            from
                mbti_response_group
            group by
                skin_problem_one
            ) as a
            left outer join (
                select
                    row_number() over(order by count(skin_problem_two)  desc) as id,
                    rank() over(order by count(skin_problem_two) desc),
                    skin_problem_two,
                    count(skin_problem_two)
                from
                    mbti_response_group
                group by
                    skin_problem_two) as b on(a.id = b.id)
        order by
            a.id
    </select>

</mapper>