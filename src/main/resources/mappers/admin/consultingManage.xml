<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="LacunaMatata.Lacuna.repository.admin.ConsulttingManageMapper">
    <resultMap id="consultingUpperCategoryResultMap" type="LacunaMatata.Lacuna.entity.consulting.ConsultingUpperCategory">
        <id property="consultingUpperCategoryId" column="consulting_upper_category_id" />
        <result property="consultingUpperCategoryName" column="consulting_upper_category_name" />
        <result property="consultingUpperCategoryDescription" column="consulting_upper_category_description" />
        <result property="consultingUpperCategoryImg" column="consulting_upper_category_img" />
        <result property="consultingUpperCategoryRegisterId" column="consulting_upper_category_register_id" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <result property="name" column="cuc_name" />
        <result property="totalCount" column="totalCount" />
        <collection property="consultingLowerCategory" javaType="java.util.List" resultMap="consultingLowerCategoryResultMap" />
    </resultMap>
    <resultMap id="consultingLowerCategoryResultMap" type="LacunaMatata.Lacuna.entity.consulting.ConsultingLowerCategory">
        <id property="consultingLowerCategoryId" column="consulting_lower_category_id" />
        <result property="consultingUpperCategoryId" column="consulting_upper_category_id" />
        <result property="consultingLowerCategoryName" column="consulting_lower_category_name" />
        <result property="consultingLowerCategoryRegisterId" column="consulting_lower_category_register_id" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <result property="name" column="clc_name" />
        <result property="totalCount" column="totalCount" />
        <result property="consultingUpperCategoryName" column="consultingUpperCategoryName" />
    </resultMap>
    <resultMap id="consultingSurveyInfoResultMap" type="LacunaMatata.Lacuna.entity.consulting.ConsultingSurveyInfo">
        <id property="consultingId" column="consulting_id" />
        <result property="consultingSurveyUpperCategoryId" column="consulting_survey_upper_category_id" />
        <result property="consultingLowerCategoryId" column="consulting_lower_category_id" />
        <result property="consultingCode" column="consulting_code" />
        <result property="consultingSurveyRegisterId" column="consulting_survey_register_id" />
        <result property="consultingTitle" column="consulting_title" />
        <result property="consultingSubtitle" column="consulting_sub_title" />
        <result property="consultingImg" column="consulting_img" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <result property="totalCount" column="totalCount" />
        <result property="name" column="name" />
        <result property="consultingUpperCategoryName" column="consultingUpperCategoryName" />
        <result property="consultingLowerCategoryName" column="consultingLowerCategoryName" />
        <collection property="consultingSurveyOption" javaType="java.util.List" resultMap="consultingSurveyOptionResultMap" />
    </resultMap>
    <resultMap id="consultingSurveyOptionResultMap" type="LacunaMatata.Lacuna.entity.consulting.ConsultingSurveyOption">
        <id property="consultingOptionId" column="consulting_option_id" />
        <result property="consultingId" column="consulting_id" />
        <result property="consultingOptionType" column="consulting_option_type" />
        <result property="optionValue" column="option_value" />
        <result property="optionScore" column="option_score" />
    </resultMap>
    <resultMap id="lifeStyleResultResultMap" type="LacunaMatata.Lacuna.entity.lifestyle.LifestyleResult">
        <id property="lifestyleResultId" column="lifestyle_result_id" />
        <result property="lifestyleResultConsultingUpperCategoryId" column="lifestyle_result_consulting_upper_category_id" />
        <result property="lifestyleResultConsultingLowerCategoryId" column="lifestyle_result_consulting_lower_category_id" />
        <result property="lifestyleResultUnitTitle" column="lifestyle_result_unit_title" />
        <result property="lifestyleResultRegisterId" column="lifestyle_result_register_id" />
        <result property="lifestyleResultStatus" column="lifestyle_result_status" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <result property="name" column="name" />
        <result property="consultingUpperCategoryName" column="consultingUpperCategoryName" />
        <result property="consultingLowerCategoryName" column="consultingLowerCategoryName" />
        <result property="totalCount" column="totalCount" />
        <collection property="lifestyleResultDetail" javaType="java.util.List" resultMap="lifestyleResultDetailResultMap" />
    </resultMap>
    <resultMap id="lifestyleResultDetailResultMap" type="LacunaMatata.Lacuna.entity.lifestyle.LifestyleResultDetail">
        <id property="lifestyleResultDetailId" column="lifestyle_result_detail_id" />
        <result property="lifestyleResultId" column="lifestyle_result_id" />
        <result property="lifestyleResultType" column="lifestyle_result_type" />
        <result property="lifestyleResultTitle" column="lifestyle_result_title" />
        <result property="lifestyleResultScoreMin" column="lifestyle_result_score_min" />
        <result property="lifestyleResultScoreMax" column="lifestyle_result_score_max" />
        <result property="lifestyleResultContent" column="lifestyle_result_content" />
    </resultMap>
    <resultMap id="UserResultMap" type="LacunaMatata.Lacuna.entity.user.User">
        <id property="userId" column="user_id" />
    </resultMap>

    <insert id="saveConsultingUpperCategory" useGeneratedKeys="true" keyProperty="consultingUpperCategoryId">
        insert into tb_consulting_upper_category
        values(
            default,
            #{consultingUpperCategoryName},
            #{consultingUpperCategoryDescription},
            #{consultingUpperCategoryImg},
            #{consultingUpperCategoryRegisterId},
            now(),
            now()
        )
    </insert>
    <insert id="saveConsultingLowerCategory" useGeneratedKeys="true" keyProperty="consultingLowerCategoryId">
        insert into tb_consulting_lower_category
        values(
            default,
            #{consultingUpperCategoryId},
            #{consultingLowerCategoryName},
            #{consultingLowerCategoryRegisterId},
            now(),
            now()
        )
    </insert>
    <insert id="saveConsultingSurveyInfo" useGeneratedKeys="true" keyProperty="consultingId">
        insert into tb_consulting_survey_info
        values(
            default,
            #{consultingSurveyUpperCategoryId},
            #{consultingLowerCategoryId},
            #{consultingCode},
            #{consultingSurveyRegisterId},
            #{consultingTitle},
            #{consultingSubtitle},
            #{consultingImg},
            now(),
            now()
        )
    </insert>
    <insert id="saveConsultingSurveySelectOption" useGeneratedKeys="true" keyProperty="consultingOptionId">
        insert into tb_consulting_survey_option
        values
            <foreach item="surveyOptionList" collection="consultingSurveyOption" separator=",">
                (
                    default,
                    #{surveyOptionList.consultingId},
                    #{surveyOptionList.consultingOptionType},
                    #{surveyOptionList.optionValue},
                    #{surveyOptionList.optionScore}
                )
            </foreach>
    </insert>
    <insert id="saveConsultingSurveyNonSelectOption" useGeneratedKeys="true" keyProperty="consultingOptionId">
        insert into tb_consulting_survey_option
        values
        (
            default,
            #{surveyOptionList.consultingId},
            #{surveyOptionList.consultingOptionType},
            "",
            0
        )
    </insert>
    <insert id="saveLifestyleResult" useGeneratedKeys="true" keyProperty="lifestyleResultId">
        insert into tb_lifestyle_result
        values(
            default,
            #{lifestyleResultConsultingUpperCategoryId},
            #{lifestyleResultConsultingLowerCategoryId},
            #{lifestyleResultUnitTitle},
            #{lifestyleResultRegisterId},
            #{lifestyleResultStatus},
            now(),
            now()
        )
    </insert>
    <insert id="saveLifestyleResultDetail">
        insert into tb_lifestyle_result_detail
        values
            <foreach item="lifestyleDetail" collection="lifestyleResultDetailList" separator=",">
                (
                    default,
                    #{resultId},
                    #{lifestyleDetail.lifestyleResultType}
                    #{lifestyleDetail.lifestyleResultTitle}
                    #{lifestyleDetail.lifestyleResultScoreMin}
                    #{lifestyleDetail.lifestyleResultScoreMax}
                    #{lifestyleDetail.lifestyleResultContent}
                )
            </foreach>
    </insert>

    <update id="modifyConsultingUpperCategory">
        update tb_consulting_upper_category
        set
            consulting_upper_category_name = #{consultingUpperCategoryName},
            consulting_upper_category_description = #{consultingUpperCategoryDescription},
            consulting_upper_category_img = #{consultingUpperCategoryImg},
            update_date = now()
        where
            consulting_upper_category_id = #{consultingUpperCategoryId}
    </update>
    <update id="modifyConsultingLowerCategory">
        update tb_consulting_lower_category
        set
            consulting_lower_category_name = #{consultingLowerCategoryName},
            update_date = now()
        where
            consulting_lower_category_id = #{consultingLowerCategoryId}
    </update>
    <update id="modifyConsultingSurveyInfo">
        update tb_consulting_survey_info
        set
            consulting_code = #{consultingCode},
            consulting_title = #{consultingTitle},
            consulting_subtitle = #{consultingSubtitle},
            consulting_img = #{consultingImg},
            update_date = now()
        where
            consulting_id = #{consultingId}
    </update>
    <update id="modifyLifestyleResult">
        update tb_lifestyle_result
        set
            lifestyle_result_unit_title = #{lifestyleResultUnitTitle},
            lifestyle_result_status = #{lifestyleResultStatus},
            update_date = now()
        where
            lifestyle_result_id = #{lifestyleResultId}
    </update>
    <update id="modifyLifestyleResultDetail">
        update tb_lifestyle_result_detail
        set
            lifestyle_result_title = case
                <foreach item="lifestyleDetail" collection="lifestyleDetailList" separator=" ">
                    when lifestyle_result_detail_id = #{lifestyleDetail.lifestyleResultDetailId}
                    then #{lifestyleDetail.lifestyleResultTitle}
                </foreach>
            end,
            lifestyle_result_content = case
                <foreach item="lifestyleDetail" collection="lifestyleDetailList" separator=" ">
                    when lifestyle_result_detail_id = #{lifestyleDetail.lifestyleResultDetailId}
                    then #{lifestyleDetail.lifestyleResultContent}
                </foreach>
            end,
            lifestyle_result_score_min = case
                <foreach item="lifestyleDetail" collection="lifestyleDetailList" separator=" ">
                    when lifestyle_result_detail_id = #{lifestyleDetail.lifestyleResultDetailId}
                    then #{lifestyleDetail.lifestyleResultScoreMin}
                </foreach>
            end,
            lifestyle_result_score_max = case
                <foreach item="lifestyleDetail" collection="lifestyleDetailList" separator=" ">
                    when lifestyle_result_detail_id = #{lifestyleDetail.lifestyleResultDetailId}
                    then #{lifestyleDetail.lifestyleResultScoreMax}
                </foreach>
            end
        where
            lifestyle_result_detail_id in
                <foreach item="lifestyleDetail" collection="lifestyleDetailList" open="(" separator="," close=")">
                    #{lifestyleDetail.lifestyleResultDetailId}
                </foreach>
    </update>

    <delete id="deleteConsultingUpperCategory">
        delete
        from
            tb_consulting_upper_category
        where
            consulting_upper_category_id = #{upperId}
    </delete>
    <delete id="deleteConsultingUpperCategoryList">
        delete
        from
            tb_consulting_upper_category
        where
            consulting_upper_category_id in
            <foreach item="upperId" collection="upperCategoryIdList" open="(" separator="," close=")">
                #{upperId}
            </foreach>
    </delete>
    <delete id="deleteConsultingLowerCategory">
        delete
        from
            tb_consulting_lower_category
        where
            consulting_lower_category_id = #{lowerId}
    </delete>
    <delete id="deleteConsultingLowerCategoryList">
        delete
        from
            tb_consulting_lower_category
        where
            consulting_lower_category_id in
            <foreach item="lowerId" collection="lowerCategoryIdList" open="(" separator="," close=")">
                #{lowerId}
            </foreach>
    </delete>
    <delete id="deleteConsultingSurveyOption">
        delete
        from
            tb_consulting_survey_option
        where
            consulting_id = #{consultingId}
    </delete>
    <delete id="deleteConsultingSurveyInfo">
        delete
        from
            tb_consulting_survey_info
        where
            consulting_id = #{consultingId}
    </delete>
    <delete id="deleteConsultingSurveyInfoList">
        delete
        from
            tb_consulting_survey_option
        where
            consulting_id in
            <foreach item="consultingId" collection="consultingIdList" open="(" separator="," close=")">
                #{consultingId}
            </foreach>
    </delete>
    <delete id="deleteLifestyleResult">
        delete
        from
            tb_lifestyle_result
        where
            lifestyle_result_id = #{resultId}
    </delete>
    <delete id="deleteLifestyleResultList">
        delete
        from
            tb_lifestyle_result
        where
            lifestyle_result_id in
            <foreach item="resultId" collection="resultIdList" open="(" separator="," close=")">
                #{resultId}
            </foreach>
    </delete>

    <select id="getConsultingCategoryList" resultMap="consultingUpperCategoryResultMap">
        select
            cuc.consulting_upper_category_id,
            cuc.consulting_upper_category_name,
            cuc.consulting_upper_category_description,
            cuc.consulting_upper_category_img,
            cuc.consulting_upper_category_register_id,
            cuc.create_date,
            cuc.update_date,
            (select u.name
            from tb_user u
            where u.user_id = cuc.consulting_upper_category_register_id) as cuc_name,
            (select count(*) from tb_consulting_upper_category) as totalCount,
            clc.consulting_lower_category_id,
            clc.consulting_upper_category_id,
            clc.consulting_lower_category_name,
            clc.consulting_lower_category_register_id,
            clc.create_date,
            clc.update_date,
            (select u.name
            from tb_user u
            where u.user_id = clc.consulting_lower_category_register_id) as clc_name
        from
            tb_consulting_upper_category cuc
            left outer join tb_consulting_lower_category clc on clc.consulting_upper_category_id = cuc.consulting_upper_category_id
    </select>
    <select id="getConsultingUpperFilter" resultMap="consultingUpperCategoryResultMap">
        select
            consulting_upper_category_id,
            consulting_upper_category_name,
            consulting_upper_category_description,
            consulting_upper_category_img,
            consulting_upper_category_register_id,
            create_date,
            update_date
        from
            tb_consulting_upper_category
    </select>
    <select id="getConsultingUpperCategory" resultMap="consultingUpperCategoryResultMap">
        select
            consulting_upper_category_id,
            consulting_upper_category_name,
            consulting_upper_category_description,
            consulting_upper_category_img,
            consulting_upper_category_register_id,
            create_date,
            update_date
        from
            tb_consulting_upper_category
        where
            consulting_upper_category_id = #{upperId}
    </select>

    <select id="getConsultingLowerCategoryList" resultMap="consultingLowerCategoryResultMap">
        select
            clc.consulting_lower_category_id,
            clc.consulting_upper_category_id,
            clc.consulting_lower_category_name,
            clc.consulting_lower_category_register_id,
            clc.create_date,
            clc.update_date,
            (select u.name
            from tb_user u
            where u.user_id = clc.consulting_lower_category_register_id) as clc_name,
            count(*) over () as totalCount
        from
            tb_consulting_lower_category clc
        where
            clc.consulting_upper_category_id = #{upperId}
    </select>
    <select id="getConsultingLowerCategory" resultMap="consultingLowerCategoryResultMap">
        select
            clc.consulting_lower_category_id,
            clc.consulting_upper_category_id,
            clc.consulting_lower_category_name,
            clc.consulting_lower_category_register_id,
            clc.create_date,
            clc.update_date,
            (select u.name
            from tb_user u
            where u.user_id = clc.consulting_lower_category_register_id) as clc_name,
            (select cuc.consulting_upper_category_name
            from tb_consulting_upper_category cuc
            where cuc.consulting_upper_category_id = clc.consulting_upper_category_id) as consultingUpperCategoryName
        from
            tb_consulting_lower_category clc
        where
            clc.consulting_lower_category_id = #{lowerId}
    </select>
    <select id="getConsultingSurveyList" resultMap="consultingSurveyInfoResultMap">
        select
            csi.consulting_id,
            csi.consulting_survey_upper_category_id,
            (select cuc.consulting_upper_category_name
            from tb_consulting_upper_category cuc
            where cuc.consulting_upper_category_id = csi.consulting_survey_upper_category_id) as consultingUpperCategoryName,
            csi.consulting_lower_category_id,
            (select clc.consulting_lower_category_name
            from tb_consulting_lower_category clc
            where clc.consulting_lower_category_id = csi.consulting_lower_category_id) as consultingLowerCategoryName,
            csi.consulting_code,
            csi.consulting_survey_register_id,
            csi.consulting_title,
            csi.consulting_subtitle,
            csi.consulting_img,
            csi.create_date,
            csi.update_date,
            (select count(*) from tb_consulting_survey_info) as totalCount,
            (select u.name
            from tb_user u
            where u.user_id = csi.consulting_survey_register_id) as name
        from
            tb_consulting_survey_info csi
        where
            1 = 1
            <if test="filter != null and filter != '' and filter != 0">
                and csi.consulting_survey_upper_category_id = #{filter}
            </if>
            <if test="searchValue != null and searchValue != ''">
                <choose>
                    <when test="option == 0">
                        and (csi.consulting_code concat('%', trim(ifnull(#{searchValue}, '')), '%')
                        or csi.consulting_title like concat('%', trim(ifnull(#{searchValue}, '')), '%'))
                    </when>
                    <when test="option == 1">
                        and csi.consulting_code like concat('%', trim(ifnull(#{searchValue}, '')), '%')
                    </when>
                    <when test="option == 2">
                        and csi.consulting_title like concat('%', trim(ifnull(#{searchValue}, '')), '%')
                    </when>
                </choose>
            </if>
        limit
            #{startIndex}, #{limit}
    </select>
    <select id="getConsultingSurveyInfo" resultMap="consultingSurveyInfoResultMap">
        select
            csi.consulting_id,
            csi.consulting_survey_upper_category_id,
            (select cuc.consulting_upper_category_name
            from tb_consulting_upper_category cuc
            where cuc.consulting_upper_category_id = csi.consulting_survey_upper_category_id) as consultingUpperCategoryName,
            csi.consulting_lower_category_id,
            (select clc.consulting_lower_category_name
            from tb_consulting_lower_category clc
            where clc.consulting_lower_category_id = csi.consulting_lower_category_id) as consultingLowerCategoryName,
            csi.consulting_code,
            csi.consulting_survey_register_id,
            csi.consulting_title,
            csi.consulting_sub_title,
            csi.consulting_img,
            cso.consulting_option_id,
            cso.consulting_id,
            cso.consulting_option_type,
            cso.option_value,
            cso.option_score
        from
            tb_consulting_survey_info csi
            left outer join tb_consulting_survey_option cso on cso.consulting_id = csi.consulting_id
        where
            csi.consulting_id = #{consultingId}
    </select>
    <select id="getLifeStyleResultList" resultMap="lifeStyleResultResultMap">
        select
            lr.lifestyle_result_id,
            lr.lifestyle_result_consulting_upper_category_id,
            (select cuc.consulting_upper_category_name
            from tb_consulting_upper_category cuc
            where cuc.consulting_upper_category_id = lr.lifestyle_result_consulting_upper_category_id) as consultingUpperCategoryName,
            lr.lifestyle_result_consulting_lower_category_id,
            (select clc.consulting_lower_category_name
            from tb_consulting_lower_category clc
            where clc.consulting_lower_category_id = lr.lifestyle_result_consulting_lower_category_id) as consultingLowerCategoryName,
            lr.lifestyle_result_unit_title,
            lifestyle_result_register_id,
            (select u.name
            from tb_user u
            where u.user_id = lr.lifestyle_result_register_id) as name,
            lr.lifestyle_result_status,
            lr.create_date,
            lr.update_date,
            (select count(*) from tb_lifestyle_result) as totalCount
        from
            tb_lifestyle_result lr
        where
            1 = 1
            <if test="searchValue != null and searchValue != ''">
                and lr.lifestyle_result_unit_title like concat('%', trim(ifnull(#{searchValue}, '')), '%')
            </if>
        limit
            #{startIndex}, #{limit}
    </select>
    <select id="getLifestyleResult" resultMap="lifeStyleResultResultMap">
        select
            lr.lifestyle_result_id,
            lr.lifestyle_result_consulting_upper_category_id,
            (select cuc.consulting_upper_category_name
            from tb_consulting_upper_category cuc
            where cuc.consulting_upper_category_id = lr.lifestyle_result_consulting_upper_category_id) as consultingUpperCategoryName,
            lr.lifestyle_result_consulting_lower_category_id,
            (select clc.consulting_lower_category_name
            from tb_consulting_lower_category clc
            where clc.consulting_lower_category_id = lr.lifestyle_result_consulting_lower_category_id) as consultingLowerCategoryName,
            lr.lifestyle_result_unit_title,
            lifestyle_result_register_id,
            (select u.name
            from tb_user u
            where u.user_id = lr.lifestyle_result_register_id) as name,
            lr.lifestyle_result_status,
            lr.create_date,
            lr.update_date,
            lrd.lifestyle_result_detail_id,
            lrd.lifestyle_result_id,
            lrd.lifestyle_result_type,
            lrd.lifestyle_result_title,
            lrd.lifestyle_result_score_min,
            lrd.lifestyle_result_score_max,
            lrd.lifestyle_result_content
        from
            tb_lifestyle_result lr
            left outer join tb_lifestyle_result_detail lrd on lrd.lifestyle_result_id = lr.lifestyle_result_id
        where
            lr.lifestyle_result_id = #{resultId}
    </select>
    <select id="getConsultingMemberList" resultMap="UserResultMap">
        select
            u.name,
            u.last_login_date,
            uoi.birth_date,
            uoi.gender,
            cmi.consulting_member_id,
            pi.last_purchased_item,
            cmdi.personal_consulting_status,
            cs.consulting_status_name,
            csm.create_date
        from
            tb_user u
            left outer join tb_consulting_status_met csm on csm.consulting_status_member_id = u.user_id
        order by
            csm.create_date desc
    </select>
</mapper>