<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="LacunaMatata.Lacuna.repository.user.UserMapper">
    <resultMap id="loginHistoryResultMap" type="LacunaMatata.Lacuna.entity.user.LoginHistory">
        <id property="loginHistoryId" column="login_history_id" />
        <result property="loginUserId" column="login_user_id" />
        <result property="loginTime" column="login_time" />
        <result property="loginIp" column="login_ip" />
    </resultMap>
    <resultMap id="UserResultMap" type="LacunaMatata.Lacuna.entity.user.User">
        <id property="userId" column="user_id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="email" column="email" />
        <result property="name" column="name" />
        <result property="lastLoginDate" column="last_login_date" />
        <result property="createdDate" column="create_date" />
        <collection property="userRoleMets" javaType="java.util.Set" resultMap="userRoleMetsResultMap" />
    </resultMap>
    <resultMap id="userRoleMetsResultMap" type="LacunaMatata.Lacuna.entity.user.UserRoleMet">
        <id property="userRoleMetId" column="user_role_met_id" />
        <result property="roleUserId" column="role_user_id" />
        <result property="roleId" column="role_id" />
        <association property="userRole" resultMap="userRoleResultMap" />
    </resultMap>
    <resultMap id="userRoleResultMap" type="LacunaMatata.Lacuna.entity.user.UserRole">
        <id property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
        <result property="roleDescription" column="role_description" />
        <result property="roleImg" column="role_img" />
    </resultMap>
    <insert id="saveUser" useGeneratedKeys="true" keyProperty="userId">
        insert into tb_user
        values(
            default,
            #{username},
            #{email},
            #{password},
            #{name},
            default,
            now(),
            now(),
            now(),
            now()
        )
    </insert>
    <insert id="saveUserOptionalInfo" useGeneratedKeys="true" keyProperty="userOptionId">
        insert into tb_user_optional_info
        values(
            default,
            #{userId},
            #{birthDate},
            #{gender},
            #{phoneNumber},
            #{address},
            default,
            #{marketingReceiveAgreement},
            #{thirdPartyInfoSharingAgreement},
            #{useConditionAgreement}
        )
    </insert>
    <insert id="saveLoginHistory" useGeneratedKeys="true" keyProperty="loginHistoryId">
        insert into tb_login_history
        values(
            default,
            #{loginUserId},
            now(),
            #{loginIp}
        )
    </insert>
    <update id="modifyLoginDate">
        update tb_user
        set
            last_login_date = now()
        where
            user_id = #{userId}
    </update>
    <select id="findLoginHistoryByUserId" resultMap="loginHistoryResultMap">
        select
            *
        from
            tb_login_history
        where
            login_user_id = #{userId}
    </select>

    <select id="findUserByUserId" resultMap="UserResultMap">
        select
            u.user_id,
            u.username,
            u.email,
            u.password,
            u.name,
            u.last_login_date,
            u.create_date,
            urm.user_role_met_id,
            urm.role_user_id,
            urm.role_id,
            ur.role_id,
            ur.role_name,
            ur.role_img
        from
            tb_user u
            left outer join tb_user_role_met urm on(u.user_id = urm.role_user_id)
            left outer join tb_user_role ur on(urm.role_id = ur.role_id)
        where
            u.user_id = #{userId}
    </select>
    <select id="findUserByUsername" resultMap="UserResultMap">
        select
            u.user_id,
            u.username,
            u.email,
            u.password,
            u.name,
            u.last_login_date,
            u.create_date,
            urm.user_role_met_id,
            urm.role_user_id,
            urm.role_id,
            ur.role_id,
            ur.role_name,
            ur.role_img
        from
            tb_user u
            left outer join tb_user_role_met urm on(u.user_id = urm.role_user_id)
            left outer join tb_user_role ur on(urm.role_id = ur.role_id)
        where
            u.username = #{username}
    </select>
    <select id="findUserByEmail" resultMap="UserResultMap">
        select
            u.user_id,
            u.username,
            u.email,
            u.password,
            u.name,
            u.last_login_date,
            u.create_date,
            urm.user_role_met_id,
            urm.role_user_id,
            urm.role_id,
            ur.role_id,
            ur.role_name,
            ur.role_img
        from
            tb_user u
            left outer join tb_user_role_met urm on(u.user_id = urm.role_user_id)
            left outer join tb_user_role ur on(urm.role_id = ur.role_id)
        where
            u.email = #{email}
    </select>
    <select id="findUserRoleByRoleId" resultMap="userRoleResultMap">
        select
            role_id,
            role_name,
            role_description,
            role_img
        from
            tb_user_role
        where
            role_id = #{roleId}
    </select>

</mapper>